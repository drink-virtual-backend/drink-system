{"version":3,"sources":["pages/drink/fetch.ts","utils/index.ts","utils/constant.ts","pages/drink/index.tsx","pages/drink/column.tsx","pages/user/columns.tsx","pages/user/index.tsx","pages/user/fetch.ts","pages/deliver/columns.tsx","pages/deliver/index.tsx","pages/deliver/fetch.ts","pages/orders/index.tsx","pages/orders/fetch.ts","pages/orders/columns.tsx","pages/material/fetch.ts","pages/material/index.tsx","pages/material/columns.tsx","App.tsx","utils/request.ts","index.tsx"],"names":["actionDrink","drink","status","axios","post","upload","file","key","observable","qiniu","Promise","resolve","reject","subscribe","next","res","error","err","complete","FormItem","Item","Option","layout","wrapperCol","span","defaultDrink","drink_avatartUrl","drink_form","drink_name","drink_price","action","useState","visible","setVisible","loading","setLoading","tagVisible","setTagVisible","setStatus","materials","setMaterials","drinkList","setDrinkList","setDrink","useForm","form","newMaterial","name","value","onUpload","options","a","timestamp","Date","now","toString","onMaterialConfirm","uploadButton","LoadingOutlined","PlusOutlined","columns","onDel","then","data","fetchData","message","success","onEdit","setFieldsValue","title","dataIndex","render","record","index","values","list","map","item","width","src","alt","id","onClick","type","size","style","marginLeft","get","useEffect","extra","rowKey","bordered","dataSource","footer","onCancel","onFinish","label","required","disabled","placeholder","display","alignItems","flexWrap","closable","onClose","material","filter","className","marginTop","onChange","some","choice_name","min","defaultValue","onPressEnter","listType","showUploadList","customRequest","textAlign","htmlType","user_home","user_menpai","userList","setUserList","orders","allOrders","setAllOrders","order","class","marginRight","price","number","reduce","desc","fItem","slice","count","forEach","dayjs","format","user_name","user_phone","man_id","man_phone","1","2","3","Group","e","target","Button","actionMaterial","choice_avatartUrl","materialList","setMaterialList","choice_num","Header","Content","Footer","Sider","App","ref","useRef","current","setCurrent","pageId","hashRouter","pathname","history","location","height","to","theme","mode","onSelect","param","selectedKeys","defaultSelectedKeys","UserOutlined","margin","padding","minHeight","path","exact","component","Material","Drink","User","Deliver","Orders","defaults","baseURL","interceptors","response","use","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ba1942f0.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getMaterialList = () => {\n    return axios.get('/manage/choice') as Promise<MaterialList>;\n};\n\nexport const getDrinkList = () => {\n    return axios.get('/manage/drink') as Promise<DrinkList>;\n};\n\nexport const actionDrink = (drink: Drink, status: number) => {\n    return axios.post('/manage/drink', {\n        ...drink,\n        status,\n    });\n}","import * as qiniu from 'qiniu-js';\nimport { uploadToken as token } from './constant';\n\nexport const upload = (file: Blob, key: string) => {\n    const observable = qiniu.upload(file, key, token, {}, {});\n    return new Promise((resolve, reject) => {\n        observable.subscribe({\n            next(res){\n            },\n            error(err){\n                reject(err)\n            }, \n            complete(res){\n                resolve(res)\n            },\n        });\n    });\n};","export const uploadToken = '33mFN7fKO2h85Lf46XvJtkRAwu6HQ--KMWnbEqHn:8RPqNE7CHyJP9qD5QMvsF7mWFAY=:eyJzY29wZSI6InNjZWxleS1zdG9yZSIsImRlYWRsaW5lIjoxNjE1MzA3MTg0fQ==';\nexport const serverURL = 'https://www.sxyuening.cn';\n","import React, { useState, useEffect } from \"react\";\nimport {\n    Table,\n    Button,\n    Modal,\n    Form,\n    Upload,\n    Card,\n    Input,\n    Select,\n    Tag,\n    InputNumber,\n    message,\n} from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getDrinkList, getMaterialList, actionDrink } from \"./fetch\";\nimport { getColumns } from \"./column\";\nimport { upload } from \"../../utils\";\nimport \"./index.css\";\n\nconst { Item: FormItem } = Form;\nconst { Option } = Select;\nconst layout = {\n    wrapperCol: { span: 24 },\n};\nconst defaultDrink = {\n    drink_avatartUrl: \"\",\n    drink_form: [],\n    drink_name: \"\",\n    drink_price: 0,\n};\n\nexport default () => {\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tagVisible, setTagVisible] = useState(false);\n    const [status, setStatus] = useState(1);\n    const [materials, setMaterials] = useState<MaterialList>([]);\n    const [drinkList, setDrinkList] = useState<DrinkList>([]);\n    const [drink, setDrink] = useState<Drink>(defaultDrink);\n    const [form] = Form.useForm();\n    const newMaterial = { name: \"\", value: 0 };\n    const onUpload = async (options: any) => {\n        const { file } = options;\n        setLoading(true);\n        const timestamp = Date.now().toString();\n        await upload(file, timestamp);\n        setLoading(false);\n        setDrink({\n            ...drink,\n            drink_avatartUrl: `https://img.qinyongli.cn/${timestamp}`,\n        });\n    };\n    const onSubmit = (values: any) => {\n        actionDrink({\n            ...drink,\n            drink_name: values.drink_name,\n            drink_price: values.drink_price,\n        }, status).then(data => {\n            message.success('提交成功');\n            fetchData();\n            setVisible(false);\n        });\n    };\n    const onMaterialConfirm = () => {\n        setDrink({\n            ...drink,\n            drink_form: [...drink.drink_form, newMaterial],\n        });\n        setTagVisible(false);\n    };\n    const onMaterialSelect = (value: string) => {\n        newMaterial.name = value;\n    };\n    const onMaterialChange = (value: undefined | number) => {\n        if (value) {\n            newMaterial.value = value;\n        }\n    };\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div>上传</div>\n        </div>\n    );\n    const onAdd = () => {\n        setStatus(1);\n        setVisible(true);\n        setDrink(defaultDrink);\n        form.setFieldsValue({\n            drink_name: defaultDrink.drink_name,\n            drink_price: defaultDrink.drink_price,\n            drink_avatartUrl: defaultDrink.drink_avatartUrl,\n        });\n    };\n    const onDel = (drink: Drink) => {\n        actionDrink(drink, 2).then(data => {\n            fetchData();\n            message.success('删除成功');\n        })\n    };\n    const onMaterialCancel = () => {\n        setTagVisible(false);\n    };\n    const onEdit = (drink: Drink) => {\n        setStatus(3);\n        setVisible(true);\n        setDrink(drink);\n        form.setFieldsValue({\n            drink_name: drink.drink_name,\n            drink_price: drink.drink_price,\n            drink_avatartUrl: drink.drink_avatartUrl,\n        });\n        \n    };\n    const onClose = (material: NameValue) => {\n        drink.drink_form = drink.drink_form.filter((item: NameValue) => {\n            return material !== item;\n        });\n    };  \n    const columns = getColumns({ onDel, onEdit });\n    const fetchData = () => {\n        getDrinkList().then((data) => {\n            setDrinkList(data);\n        });\n        getMaterialList().then((data) => {\n            setMaterials(data);\n        });\n    }\n    useEffect(() => {\n        fetchData();\n    }, []);\n    return (\n        <>\n            <Card\n                title=\"饮料配置\"\n                extra={\n                    <Button type=\"primary\" onClick={onAdd}>\n                        添加\n                    </Button>\n                }\n            >\n                <Table\n                    rowKey=\"drink_name\"\n                    bordered\n                    dataSource={drinkList}\n                    columns={columns}\n                />\n            </Card>\n            <Modal\n                title={status === 1 ? \"添加饮料\" : \"编辑饮料\"}\n                visible={visible}\n                footer={null}\n                onCancel={() => setVisible(false)}\n            >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={onSubmit}\n                    {...layout}\n                >\n                    <FormItem name=\"drink_name\" label=\"名称\" required>\n                        <Input\n                            disabled={status === 3}\n                            width=\"100%\"\n                            placeholder=\"饮料名称\"\n                        />\n                    </FormItem>\n                    <FormItem name=\"drink_form\" label=\"原料\" required>\n                        <div\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"flex-end\",\n                                flexWrap: \"wrap\",\n                            }}\n                        >\n                            {drink.drink_form.map((item: any, index) => {\n                                return (\n                                    <Tag closable onClose={() => onClose(item)} key={index}>\n                                        {`${item.name} ${item.value}g`}\n                                    </Tag>\n                                );\n                            })}\n                            {tagVisible ? (\n                                null\n                            ) : (\n                                <Tag\n                                    className=\"tag-plus\"\n                                    onClick={() => setTagVisible(true)}\n                                >\n                                    <PlusOutlined />\n                                </Tag>\n                            )}\n                        </div>\n                        {\n                            tagVisible ? (\n                                <div style={{\n                                    marginTop: 5\n                                }}>\n                                    <Select\n                                        style={{ width: 78 }}\n                                        size=\"small\"\n                                        onChange={onMaterialSelect}\n                                    >\n                                        {materials.map((item) => {\n                                            return (\n                                                <Option\n                                                    disabled={drink.drink_form.some((form: NameValue) => {\n                                                        return form.name === item.choice_name;\n                                                    })}\n                                                    value={item.choice_name}\n                                                >\n                                                    {item.choice_name}\n                                                </Option>\n                                            );\n                                        })}\n                                    </Select>\n                                    <InputNumber\n                                        style={{ width: 50 }}\n                                        size=\"small\"\n                                        min={1}\n                                        defaultValue={1}\n                                        onChange={onMaterialChange}\n                                        onPressEnter={onMaterialConfirm}\n                                    />\n                                    <Button\n                                        onClick={onMaterialCancel}\n                                        size=\"small\"\n                                    >\n                                        取消\n                                    </Button>\n                                    <Button\n                                        onClick={onMaterialConfirm}\n                                        type=\"primary\"\n                                        size=\"small\"\n                                    >\n                                        确认\n                                    </Button>\n                                </div>\n                            ) : null\n                        }\n                    </FormItem>\n                    <FormItem name=\"drink_price\" label=\"价格\" required>\n                        <InputNumber width=\"100%\" placeholder=\"饮料价格\" />\n                    </FormItem>\n                    <FormItem name=\"drink_avatartUrl\" label=\"缩略图\" required>\n                        <Upload\n                            listType=\"picture-card\"\n                            showUploadList={false}\n                            customRequest={onUpload}\n                        >\n                            {drink.drink_avatartUrl ? (\n                                <img\n                                    src={drink.drink_avatartUrl}\n                                    alt=\"thumbnailUrl\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            ) : (\n                                uploadButton\n                            )}\n                        </Upload>\n                    </FormItem>\n                    <FormItem style={{ textAlign: \"center\" }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            提交\n                        </Button>\n                    </FormItem>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n","import React from 'react';\nimport { Button } from 'antd';\n\nexport const getColumns = (action: Obj) => {\n    const columns = [\n        {\n            title: \"序号\",\n            dataIndex: \"id\",\n            render(value: string, record: any, index: number) {\n                return index + 1;\n            }\n        },\n        {\n            title: \"名称\",\n            dataIndex: \"drink_name\",\n        },\n        {\n            title: \"原料\",\n            dataIndex: \"drink_form\",\n            render(values: any[]) {\n                const list = values.map((item, index) => (\n                    <div key={index}>\n                        { `${item.name}: ${item.value}g` }\n                    </div>\n                ));\n                return (\n                    <>\n                        { list }\n                    </>\n                )\n            }\n        },\n        {\n            title: \"价格\",\n            dataIndex: \"drink_price\",\n        },\n        {\n            title: \"缩略图\",\n            width: 150,\n            dataIndex: \"drink_avatartUrl\",\n            render(value: string) {\n                return (\n                    <img width=\"100%\" src={value} alt=\"\"/>\n                )\n            }\n        },\n        {\n            title: \"操作\",\n            dataIndex: \"id\",\n            render(id: number, record: Drink) {\n                return (\n                    <>\n                        <Button onClick={() => action.onDel(record)} type=\"primary\" size=\"small\">删除</Button>\n                        <Button onClick={() => action.onEdit(record)} style={{ marginLeft: 10 }} type=\"primary\" size=\"small\">编辑</Button>\n                    </>\n                )\n            }\n        }\n    ];\n    return columns;\n}\n","import React from 'react';\n\nexport const columns = [\n    {\n        title: \"序号\",\n        dataIndex: \"id\",\n        width: 80,\n        render(value: string, record: any, index: number) {\n            return index + 1;\n        }\n    },\n    {\n        title: \"姓名\",\n        width: 150,\n        dataIndex: \"user_name\",\n    },\n    {\n        title: '用户头像',\n        dataIndex: 'user_avatartUrl',\n        width: 150,\n        render(value: string) {\n            return (\n                <img style={{ width: '100%' }} src={value} alt=\"\"/>\n            )\n        }\n    },\n    {\n        title: '用户ID',\n        dataIndex: 'user_id',\n        width: 150,\n    },\n    {\n        title: \"手机号码\",\n        width: 150,\n        dataIndex: \"user_phone\",\n    },\n    {\n        title: \"住址\",\n        dataIndex: \"user_home\",\n        render(value: string, record: Obj) {\n            return (\n                <div>{record.user_home}{record.user_menpai}</div>\n            )\n        }\n    },\n];\n","import React, { useState, useEffect } from 'react';\nimport { Card, Table } from 'antd';\nimport { columns } from './columns';\nimport { getUserList } from './fetch';\n\nexport default () => {\n    const [userList, setUserList] = useState<UserList>([]);\n    const fetchData = () => {\n        getUserList().then(data => {\n            setUserList(data);\n        });\n    };\n    useEffect(() => {\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <Card\n                title=\"用户列表\"\n            >\n                <Table\n                    bordered\n                    rowKey=\"user_id\"\n                    columns={columns}\n                    dataSource={userList}\n                >\n                </Table>\n            </Card>\n        </div>\n    );\n};\n","import axios from 'axios';\n\nexport const getUserList = () => {\n    return axios.get('/manage/user') as Promise<UserList>;\n}","import React from 'react';\n\nexport const columns = [\n    {\n        title: \"序号\",\n        width: 80,\n        dataIndex: \"id\",\n        render(value: string, record: any, index: number) {\n            return index + 1;\n        }\n    },\n    {\n        title: \"用户ID\",\n        width: 200,\n        dataIndex: \"man_id\",\n    },\n    {\n        title: '用户头像',\n        width: 150,\n        dataIndex: 'man_avatartUrl',\n        render(value: string) {\n            return (\n                <img style={{ width: '100%' }} src={value} alt=\"\"/>\n            )\n        }\n    },\n    {\n        title: \"手机号码\",\n        dataIndex: \"man_phone\",\n    },\n];","import React, { useState, useEffect } from 'react';\nimport { Card, Table } from 'antd';\nimport { columns } from './columns';\nimport { fetchDeliverList } from './fetch';\n\n\nexport default () => {\n    const [userList, setUserList] = useState<UserList>([]);\n    const fetchData = () => {\n        fetchDeliverList().then(data => {\n            setUserList(data);\n        });\n    };\n    useEffect(() => {\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <Card\n                title=\"配送员列表\"\n            >\n                <Table\n                    rowKey=\"man_id\"\n                    bordered\n                    columns={columns}\n                    dataSource={userList}\n                >\n\n                </Table>\n            </Card>\n        </div>\n    )\n}\n","import axios from 'axios';\n\nexport const fetchDeliverList = () => {\n    return axios.get('/manage/gongjuren') as Promise<UserList>;\n}","import React, { useState, useEffect } from 'react';\nimport { Card, Table, Radio } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio'\nimport { getColumns } from './columns';\nimport { getOrderList } from './fetch';\nimport './index.css';\n\n\nexport default () => {\n    let orders: Array<any> = [];\n    const [status, setStatus] = useState(-1);\n    const [allOrders, setAllOrders] = useState([]);\n    const handleChange = (e: RadioChangeEvent) => {\n        setStatus(e.target.value);\n    };\n    useEffect(() => {\n        getOrderList().then(data => {\n            setAllOrders(data);\n        });\n    }, []);\n    if (status === -1) {\n        orders = allOrders;\n    } else {\n        orders = allOrders.filter((order: any) => {\n            return order.status === status;\n        });\n    }\n    const columns = [...getColumns({})];\n    return (\n        <div>\n            <Card\n                title=\"订单列表\"\n                extra={\n                    <Radio.Group\n                        value={status}\n                        onChange={handleChange}\n                    >\n                        <Radio.Button value={-1}>全部</Radio.Button>\n                        <Radio.Button value={1}>制作中</Radio.Button>\n                        <Radio.Button value={2}>配送中</Radio.Button>\n                        <Radio.Button value={3}>完成订单</Radio.Button>\n                    </Radio.Group>\n                }\n            >\n                <Table\n                    rowKey=\"order_id\"\n                    bordered\n                    columns={columns}\n                    dataSource={orders}\n                />\n            </Card>\n        </div>\n    )\n}\n","import axios from 'axios';\n\nexport const getOrderList = () => {\n    return axios.get('/manage/history') as Promise<any>;\n}","import React from 'react';\nimport dayjs from 'dayjs';\n\nexport const getColumns = (action: Obj) => {\n    const columns = [\n        {\n            title: \"序号\",\n            dataIndex: \"id\",\n            width: 50,\n            render(value: string, record: any, index: number) {\n                return index + 1;\n            }\n        },\n        {\n            title: \"订单内容\",\n            dataIndex: \"drink_form\",\n            render(drink_form: any) {\n                return (\n                    <>\n                        { drink_form.map((item:any, index: number) => {\n                            return (\n                                <div key={index}>\n                                    {\n                                        item.class === 1 ? (\n                                            <div>\n                                                { item.form.name }\n                                                <ul>\n                                                    <li>\n                                                        <span style={{marginRight: 5}}>数量:</span>\n                                                        { item.form.value }\n                                                    </li>\n                                                    <li>\n                                                        <span style={{marginRight: 5}}>价格:</span>\n                                                        { item.price }\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        ) : (\n                                            <div>\n                                                自配饮料\n                                                <ul>\n                                                    <li>\n                                                        <span style={{marginRight: 5}}>数量:</span>\n                                                        { item.number }\n                                                    </li>\n                                                    <li>\n                                                        <span style={{marginRight: 5}}>组成:</span>\n                                                        { item.form.reduce((desc: '', fItem: any) => {\n                                                            return `${desc}+${fItem.name}·${fItem.value}`\n                                                        }, '').slice(1) }\n                                                    </li>\n                                                    <li>\n                                                        <span style={{marginRight: 5}}>价格:</span>\n                                                        { item.price }\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        )\n                                    }\n                                </div>\n                            )\n                        }) }\n                    </>\n                )\n            }\n        },\n        {\n            title: '金额',\n            width: 50,\n            dataIndex: \"drink_form\",\n            render(drink_form: any) {\n                let count = 0;\n                drink_form.forEach((item: any) => {\n                    if (item.class === 1) {\n                        count += item.price * item.form.value;\n                    } else {\n                        count += item.price * item.number;\n                    }\n                })\n                return (\n                    <div>\n                        { count }\n                    </div>\n                )\n            }\n        },\n        {\n            title: '订单时间',\n            dataIndex: 'order_start_time',\n            render() {\n                return (\n                    <div>{ dayjs().format('YYYY-MM-DD HH:mm:ss')}</div>\n                )\n            }\n        },\n        {\n            title: \"收货人\",\n            dataIndex: \"user\",\n            width: 220,\n            render(value: any, record: any) {\n                return (\n                    <>\n                        <div>姓名: {record.user_name}</div>\n                        <div>手机号码: {record.user_phone}</div>\n                        <div>地址: {record.user_home + record.user_menpai}</div>\n                    </>\n                )\n            }\n        },\n        {\n            title: \"配送人\",\n            dataIndex: \"deliver\",\n            render(value: any, record: any) {\n                return (\n                    <>\n                        <div>配送人id: {record.man_id}</div>\n                        <div>手机号码: {record.man_phone}</div>\n                    </>\n                )\n            }\n        },\n        {\n            title: '订单状态',\n            dataIndex: 'status',\n            width: 100,\n            render(value: number) {\n                const map: {\n                    [key: string]: any\n                } = {\n                    1: '制作中',\n                    2: '配送中',\n                    3: '订单完成'\n                };\n                return map[value];\n            }\n        }\n    ];\n    return columns;\n}\n","import axios from 'axios';\n\nexport const getMaterialList = () => {\n    return axios.get('/manage/choice') as Promise<MaterialList>;\n};\n\nexport const actionMaterial = (data: Obj) => {\n    return axios.post('/manage/choice', {\n        choice_avatartUrl: '',\n        ...data,\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport { Card, Button, Table, Modal, Form, Input, message } from 'antd';\nimport { getColumns } from './columns';\nimport { getMaterialList, actionMaterial } from './fetch';\n\nconst { Item: FormItem } = Form;\nconst layout = {\n    wrapperCol: { span: 24 }\n};\n\nexport default () => {\n    const [visible, setVisible] = useState(false);\n    const [status, setStatus] = useState(0);\n    const [materialList, setMaterialList] = useState<MaterialList>([]);\n    const [form] = Form.useForm();\n    const fetchData = () => {\n        getMaterialList().then((data: MaterialList) => {\n            setMaterialList(data);\n        });\n    };\n    const onSubmit = (values: Obj) => {\n        actionMaterial({\n            name: values.choice_name,\n            number: values.choice_num,\n            status,\n        }).then(data => {\n            setVisible(false);\n            message.success('提交成功');\n            fetchData();\n        });\n    };\n    const onAdd = () => {\n        setStatus(1);\n        setVisible(true);\n        form.setFieldsValue({\n            choice_name: '',\n            choice_num: ''\n        });\n    };\n    const onEdit = (name: string, record: Obj) => {\n        setStatus(3);\n        setVisible(true);\n        form.setFieldsValue(record);\n    };\n    const onDel = (name: string, record: Obj) => {\n        actionMaterial({\n            name,\n            number: record.choice_num,\n            status: 2,\n        }).then(data => {\n            message.success('删除成功');\n            fetchData();\n        });\n    };\n    useEffect(() => {\n        fetchData();\n    }, []);\n    const columns = getColumns({ onDel, onEdit });\n    return (\n        <div>\n            <Card\n                title=\"原料配置\"\n                extra={\n                    <Button onClick={onAdd} type=\"primary\">添加</Button>\n                }\n            >\n                <Table\n                    rowKey=\"choice_name\"\n                    dataSource={materialList}\n                    columns={columns}\n                    bordered\n                >\n                </Table>\n            </Card>\n            <Modal\n                title={status === 1 ? '添加原料' : '编辑原料'}\n                visible={visible}\n                footer={null}\n                onCancel={() => setVisible(false)}\n            >\n                <Form\n                    {...layout}\n                    form={form}\n                    onFinish={onSubmit}\n                    layout=\"vertical\"\n                >\n                    <FormItem name=\"choice_name\" label=\"名称\" required>\n                        <Input disabled={status === 3} width=\"100%\" placeholder=\"原料名称\" />\n                    </FormItem>\n                    <FormItem name=\"choice_num\" label=\"余量\" required>\n                        <Input width=\"100%\" placeholder=\"原料余量\" />\n                    </FormItem>\n                    <FormItem style={{ textAlign: 'center' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                    </FormItem>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from 'antd';\n\nexport const getColumns = (action: Obj) => {\n    const columns = [\n        {\n            title: \"序号\",\n            dataIndex: \"id\",\n            render(id: string, record: any, index: number) {\n                return index + 1;\n            }\n        },\n        {\n            title: \"名称\",\n            dataIndex: \"choice_name\",\n        },\n        {\n            title: \"余量\",\n            dataIndex: \"choice_num\",\n        },\n        {\n            title: \"操作\",\n            dataIndex: \"choice_name\",\n            render(id: string, record: Obj) {\n                return (\n                    <div>\n                        <Button onClick={() => action.onDel(id, record)} size=\"small\" type=\"primary\">删除</Button>\n                        <Button onClick={() => action.onEdit(id, record)} size=\"small\" style={{ marginLeft: 10 }} type=\"primary\">编辑</Button>\n                    </div>\n                )\n            }\n        }\n    ];\n    return columns;\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport Drink from './pages/drink';\nimport User from './pages/user';\nimport Deliver from './pages/deliver';\nimport Orders from './pages/orders';\nimport Material from './pages/material';\nimport './App.css';\nimport { SelectParam } from 'antd/lib/menu';\nconst { Header, Content, Footer, Sider } = Layout\n\nfunction App(): JSX.Element {\n    const ref = useRef<Router>(null);\n    const [current, setCurrent] = useState('');\n    const handleLogoClick = () => {\n        setCurrent('material');\n    };\n    const handleSelect = (param: SelectParam) => {\n        setCurrent(param.key);\n    };\n    useEffect(() => {\n        const hashRouter: any = ref.current;\n        const pathname = hashRouter?.history?.location?.pathname;\n        let pageId;\n        if (pathname === '/') {\n            pageId = 'material';\n        } else {\n            pageId = pathname?.slice(1);\n        }\n        setCurrent(pageId);\n    }, []);\n    return (\n        <div className=\"container\">\n            <Router ref={ref}>\n                <Layout style={{ height: '100vh' }}>\n                    <Sider\n                    >\n                        <Link onClick={handleLogoClick} to=\"/\">\n                            <div className=\"logo\">\n                                虚拟运营后台\n                            </div>\n                        </Link>\n                        <Menu\n                            theme=\"dark\"\n                            mode=\"inline\"\n                            onSelect={handleSelect}\n                            selectedKeys={[current]}\n                            defaultSelectedKeys={[current]}\n                        >\n                            <Menu.Item key=\"material\">\n                                <Link to=\"/\">\n                                    <span className=\"nav-text\">原料配置</span>\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"drink\">\n                                <Link to=\"/drink\">\n                                    <span className=\"nav-text\">饮料配置</span>\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"user\">\n                                <Link to=\"/user\">\n                                    <span className=\"nav-text\">用户列表</span>\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"deliver\">\n                                <Link to=\"/deliver\">\n                                    <span className=\"nav-text\">配送员表</span>\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"orders\">\n                                <Link to=\"/orders\">\n                                    <span className=\"nav-text\">订单列表</span>\n                                </Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Header className=\"header\">\n                            <UserOutlined style={{ marginRight: 5 }} />\n                            root\n                        </Header>\n                        <Content style={{ margin: \"24px 16px 0\" }}>\n                            <div\n                                className=\"content\"\n                                style={{ padding: 24, minHeight: 360 }}\n                            >\n                                <Switch>\n                                    <Route path=\"/\" exact component={Material} />\n                                    <Route path=\"/drink\" exact component={Drink}/>\n                                    <Route path=\"/user\" component={User} />\n                                    <Route path=\"/deliver\" component={Deliver} />\n                                    <Route path=\"/orders\" component={Orders} />\n                                </Switch>\n                            </div>\n                        </Content>\n                        <Footer style={{ textAlign: \"center\" }}>\n                            Virtual Manage Backend ©2020 Created by QinYongLi\n                        </Footer>\n                    </Layout>\n                </Layout>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","import axios from 'axios';\nimport { serverURL } from './constant'\n\nexport const initRequest = () => {\n    axios.defaults.baseURL = serverURL;\n    axios.interceptors.response.use((response) => {\n        return response.data;\n    }, (error) => {\n        return Promise.reject(error);\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { initRequest } from './utils/request'\nimport './index.css';\n\n\ninitRequest();\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}